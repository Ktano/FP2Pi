#########################0######################0#######################

def le_tabuleiro(ficheiro):
    ficheiro=open(ficheiro,'r')
    ficheiro=eval(ficheiro.read())
    ficheiro.close()
    return ficheiro


#########################0######################0#######################
    

def pede_jogada(tabuleiro):
    dimensao_linha=(tabuleiro_dimensoes(tabuleiro))[0]
    dimensao_coluna=(tabuleiro_dimensoes(tabuleiro))[1]    
    print('Introduza uma jogada')
    pede_coordenada=eval(input('-' +  'coordenada entre ' + '(1 : 1)' + ' e ' +  '(' + str(dimensao_linha) + ' : ' + str(dimensao_coluna) + ')' + ' >> '))
    pede_valor=eval(input('-' +  'valor' + ' >> '))
    
    def jogada_valida(coord,val):
        coord_linha=eval(coord[1])
        coord_coluna=eval(coord[5])
        if coord_linha not in range(1,dimensao_linha+1) or coord_coluna not in range(1,dimensao_coluna+1) or val not in [1,2]:
            return False
        else:
            return cria_jogada((coord_linha, coord_coluna), val)
    
    return jogada_valida(pede_coordenada, pede_valor)
    
    
    

#############################################################################

def cria_coordenada(linha, coluna):
    if not isinstance (linha, int) or not isinstance (coluna, int):
        raise ValueError ('cria_coordenadas: argumentos invalidos')
    elif linha<1 or coluna<1:
        raise ValueError ('cria_coordenada: argumentos invalidos')
    else:
        return (linha, coluna)
    
def coordenada_linha(coordenada):
    return coordenada[0]

def coordenada_coluna(coordenada):
    return coordenada[1]

def e_coordenada(arg):
    if isinstance(arg, (tuple)):
        if len(arg)==2 and arg[0]>=1 and arg[1]>=1:
            return True
        else:
            return False
    else:
        return False

def coordenadas_iguais(c1, c2):
    return c1[0]==c2[0] and c1[1]==c2[1]

def coordenada_para_cadeia(coordenada):
    return  ( '(' + str(coordenada[0]) + ' : ' + str(coordenada[1]) + ')' )
    
    
#########################0######################0#######################


    
    
def cria_jogada (coordenada, valor):
    if not e_coordenada(coordenada) or valor not in [1,2]:
        raise ValueError ('cria jogada: argumentos invalidos')
    else:
        return (coordenada, valor)
    

def jogada_coordenada(jogada):
    return jogada[0]


def jogada_valor(jogada):
    return jogada[1]


def e_jogada (arg):
    if isinstance(arg, (tuple)):
        if len(arg)==2 and e_coordenada(arg[0]) and arg[1] in [1,2]:
            return True
        else:
            return False
    else:
        return False


def jogadas_iguais(j1,j2):
    return j1[0]==j2[0] and j1[1]==j2[1]


def jogada_para_cadeia(jogada):
    return ( coordenada_para_cadeia(jogada[0]) + ' --> ' + str(jogada[1]) )



